<?xml version="1.0" encoding="UTF-8" standalone="no"?>

{% set entryNameColumnWidth = 100 %}
{% set entryNameColumnHeight = 24 %}
{% set hourlyColumnWidth = 10 %}
{% set dailyColumnSize = hourlyColumnWidth * project.calendar.business_day_length %}

{% set fullHeight = dailyColumnSize + (entryNameColumnHeight * (chart.blocks | length)) %}
{% set fullWidth = entryNameColumnWidth + (dailyColumnSize * ((chart.end - chart.start).days + 2)) %}

<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 {{ fullWidth }} {{ fullHeight }}"
     height="{{ fullHeight }}" width="{{ fullWidth }}">

    <style>
    /* <![CDATA[ */
        text {
            font-family: sans-serif;
        }

        .row {
            cursor: pointer;
        }

        rect.selected {
            fill: rgb(255, 228, 124);
        }
    /* ]]> */
    </style>

    <g id="non-working-days" transform="translate({{ entryNameColumnWidth }} 0)">
        {% for day in chart.days %}
            {% if not chart.project.calendar.is_working_date(day) %}
                <rect x="{{ dailyColumnSize * loop.index0 }}" y="0"
                      width="{{ dailyColumnSize }}" height="{{ fullHeight }}"
                      fill="rgb(230, 230, 230)" />
            {% endif %}
        {% endfor %}
    </g>

    <g id="days-headings" transform="translate({{ entryNameColumnWidth }} 0)">
        {% for day in chart.days %}
            <line x1="{{ dailyColumnSize * loop.index0 + 100 * 1.732 }}"
                  y1="{{ dailyColumnSize - 100 }}"
                  x2="{{ dailyColumnSize * loop.index0 }}"
                  y2="{{ dailyColumnSize }}"
                  stroke="grey" stroke-width="1" />

            <text x="-1" y="-5"
                  transform="rotate(-30 {{ loop.index0 * dailyColumnSize }} {{ dailyColumnSize }}) translate({{ loop.index0 * dailyColumnSize }} {{ dailyColumnSize }})">
                {{ day.strftime('%a %-d %b %Y') }}
            </text>
        {% endfor %}
    </g>

    <g id="entry-names" transform="translate(0 {{ dailyColumnSize }})">
        {% for block in chart.blocks %}
            <rect x="0" y="{{ loop.index0 * entryNameColumnHeight }}"
                  width="{{ entryNameColumnWidth }}" height="{{ entryNameColumnHeight }}"
                  stroke="grey" stroke-width="1" fill="white" class="row" />
            <text x="0" y="{{ loop.index * entryNameColumnHeight }}" dy="-6" dx="5"
                  width="{{ entryNameColumnWidth }}" height="{{ entryNameColumnHeight }}" class="row">
                <tspan>{{ block.entry.name }}</tspan>
            </text>
        {% endfor %}
    </g>

    <g id="blocks" transform="translate({{ entryNameColumnWidth }} {{ dailyColumnSize }})">
        {% for block in chart.blocks %}
            {% set y = loop.index0 %}

            {% for i in range(block.left_cells) %}
                <rect x="{{ i * hourlyColumnWidth }}" y="{{ y * entryNameColumnHeight }}"
                      width="{{ hourlyColumnWidth }}" height="{{ entryNameColumnHeight }}"
                      stroke="grey" stroke-width="1" fill="rgba(255, 255, 255, 0)" class="row" />
            {% endfor %}

            <rect x="{{ block.left_cells * hourlyColumnWidth }}" y="{{ y * entryNameColumnHeight }}"
                  width="{{ block.cells * hourlyColumnWidth }}" height="{{ entryNameColumnHeight }}"
                  stroke="grey" stroke-width="1" fill="{{ block.colour }}" class="row" />

            {% for i in range(block.right_cells) %}
                <rect x="{{ (block.left_cells + block.cells + i) * hourlyColumnWidth }}" y="{{ y * entryNameColumnHeight }}"
                      width="{{ hourlyColumnWidth }}" height="{{ entryNameColumnHeight }}"
                      stroke="grey" stroke-width="1" fill="rgba(255, 255, 255, 0)" class="row" />
            {% endfor %}
        {% endfor %}
    </g>

</svg>
